
#### IFS
* IFS 的默认值是: " \t\n"
* 查看 IFS 值: echo -n "$IFS" | hexdump
* IFS 包含转义字符时, 需要在开头添加 $, IFS=$'\n'
* IFS 为默认值 或 " \t\n" 时
    * 整个对象开头和结尾的空字符都将忽略
        * for 遍历 str="   123 456 789  " 时, 将生成 3 个串: 123 456 789
    * 对象内部连续的空字符都将当作一个字符
        * for 遍历 str="123   456    789" 时, 将生成 3 个串: 123 456 789
* IFS 为其他值时, 假定: IFS="a "
    * 如果, IFS 包含空字符, 对象内部连续的空字符都将当作一个字符
        * for 遍历 str="123      456a789" 时, 将生成 3 个串: 123 456 789
    * 其他字符连续出现时, 将当作多个分隔符
        * for 遍历 str="123aa456a789" 时, 将生成 4 个串: 123 空字符串 456 789
    * $*, ${str[*]}: 将使用 IFS 的第一个字符连起来
        * str=(1 2 3); echo "${str[*]" 将输出: 1a2a3
    * 对象末尾的分割符将被忽略
        * for 遍历 str="123aa456a789a" 时, 将生成 4 个串: 123 空字符串 456 789

#### 内置的 echo 将以 IFS 切分参数, 输出以空格隔开
* echo  123   456   789  # 将输出: 123 456 789
* echo "123   456   789" # 将输出: 123   456  789, 原样输出

