
## 普通文件 --> 文件
* cp 1.txt abc
* 如果 abc 存在且是文件, 将使用 1.txt 覆盖 abc
* 如果 abc 存在且是目录, 将 1.txt 拷贝到目录 abc 下
* 如果 abc 不存在,       将生成新文件 abc, 内容和 1.txt 相同

## 普通文件 --> 目录
* cp 1.txt abc/
* 如果 abc/ 存在且是文件, 这种情况不合法
* 如果 abc/ 存在且是目录, 将 1.txt 拷贝到目录 abc 下
* 如果 abc/ 不存在,       报错

## 符号链接 --> 文件
* cp 1.txt.link abc
* 拷贝符号链接所指的文件
* abc 不存在时, 新文件名为 abc
* abc 是文件时, 新文件名为 abc, 旧内容将被覆盖
* abc 是目录时, 新文件名为 1.txt.link

## 符号链接 --> 目录
* cp 1.txt.link abc/
* 拷贝符号链接所指的文件
* abc/ 不存在时 -- 报错
* abc/ 是文件时 -- 不存在
* abc/ 是目录时, 新文件名为 1.txt.link

## 目录 --> 文件
* cp -r abc/ 1.txt
* 1.txt 存在且是文件时, 报错
* 1.txt 存在且是目录时, 拷贝到目录 1.txt 下
* 1.txt 不存在时, 相当于 重命名

## 目录 --> 目录
* cp -r abc/ 1.txt/
* 1.txt/ 存在且是文件时 -- 不存在这种情况
* 1.txt/ 存在且是目录时, 拷贝到目录 1.txt 下
* 1.txt/ 不存在时, 相当于 重命名

## 普通文件, 符号链接, 目录 --> 符号链接
cp -s 1.txt.link b

## 全路径复制
cp --parents a/b/c/d test   # 全路径复制, 将生成 test/a/b/c/d

## 总是拷贝符号链接本身
* cp -d 1.txt.link b
* cp -P 1.txt.link b

## 总是拷贝符号链接所指的文件
cp -L 1.txt.link b

