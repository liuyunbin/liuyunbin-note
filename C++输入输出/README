
scanf 除了 %c 外, 将忽略所有的空白字符

"%c"     # 字符
         # 输入: 可以读入空白字符
" %c"    # 输入: 忽略所有的空白字符
         #       然后读入字符
         # 输出: 输出空格, 再输出字符
"%s"     # 字符串
"%5s"    # 输入: 指定最大宽度
         #       貌似只对字符串有效
         # 输出: 指定最小宽度
         #       默认右对齐
         #       填充空格
"%d"     # 十进制整数
"%-5d"   # 输出: 左对齐
"%+5d"   # 输出: 有符号的数字,
         #       如果是正数, 添加前缀 +
"%05d"   # 输出: 前缀填充 0
"%u"     # 无符号的  十进制整数
"%o"     # 无符号的  八进制整数
"%x"     # 无符号的十六进制整数
"%i"     #                 整数
"%f"     # 非科学计数法的浮点数
"%10.5f" # 指明宽度 和 小数点位数
         # TODO: 四舍五入?
"%e"     #   科学计数法的浮点数
"%g"     #               浮点数
"%p"     #               指针
"%*d"    # 输入: 忽略这个数据
         # 输出: 指定宽度

getchar()         # 读取一个字符,   包含空白字符
cin >> ch         # 读取一个字符, 不包含空白字符
cin.get(ch)       # 读取一个字符,   包含空白字符

fgets()           # 读取一行,   包含换行符
getline(cin, str) # 读取一行, 不包括换行符

cin  >> setw(5);     # 设置输入的最大宽度
                     # 貌似只对字符串有效
                     # 只对下一位有效-不准确
cout << setw(5);     # 设置输出的最小宽度
                     # 默认右对齐
                     # 默认填充字符为空格
                     # 只对下一位有效-不准确
cout << setfill('*') # 设置填充字符为: *
cout << left;        # 设置左对齐, 默认右对齐
cout << right;       # 设置右对齐, 默认右对齐
cout << hex;         # 设置整数十六进制输出
cout << oct;         # 设置整数  八进制输出
cout << dec;         # 设置整数  十进制输出
cout << showbase;    #   输出进制前缀
cout << noshowbase;  # 不输出进制前缀
cout << showpoint;   # 设置不省略小数点后的 0
cout << setprecision(3);
                     # 设置浮点数整体精度
cout << scientific;  # 设置浮点数  以科学表示法输出
cout << fixed;       # 设置浮点数不以科学表示法输出
cout << fixed << setprecision(3);
                     # 设置浮点数不以科学表示法输出
                     # 小数点后保留 3 位小数
                     # TODO: 四舍五入?
cout << boolalpha;   # 输出 false true

