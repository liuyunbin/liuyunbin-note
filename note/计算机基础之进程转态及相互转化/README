
## 进程状态改变
* 就绪 => 运行(R)
* 运行(R) => 休眠(S)(可被信号打断)(指被捕获的信号)
    * pause() 只有收到未忽略的信号才返回
    * sleep() 只有收到未忽略的信号 或 到达指定秒数才返回
* 运行(R) => 休眠(D)(不可被信号打断)(指被捕获的信号)
    * 调用 vfork() 后的父进程
* 运行(R) 或 休眠(S) => 暂停(T)(作业控制)
    * 收到信号 SIGSTOP
    * 收到信号 SIGTSTP, 可由 ctrl+z 产生
    * 收到信号 SIGTTIN, 处于后台进程时读终端
    * 收到信号 SIGTTOT, 处于后台进程时写终端, 这个得看设置是否允许后台进程写终端
* 暂停(T) => 运行(R) 或 休眠(S)
    * 收到信号 SIGCONT
* 运行(R) => 暂停(t)(由于 DEBUG 产生)
* 运行(R) => 空闲(I), 处于不可被打断的休眠状态时, 有时 CPU 是空闲的
* 运行(R) 或 休眠(S) 或 暂停(T) 或 暂停(t) => 僵尸(Z)
    * 子进程已退出, 父进程还未处理
* 僵尸(Z) => 退出(X)

