
## 权限分类
* 读(r)
    * 文件: 查看文件的内容
    * 目录: 查看此目录下的文件
* 写(w)
    * 文件: 修改文件的内容
    * 目录: 新增或删除此目录下的文件
* 执行(x)
    * 文件: 执行此文件
    * 目录: 通过该目录
* SUID(有可执行权限, 显示 s, 否则, 显示 S)
    * 二进制文件: 文件执行时, 拥有此文件所有者的权限
    * 其他可执行文件: 无效
    * 目录: 无效
* SGID(有可执行权限, 显示 s, 否则, 显示 S)
    * 二进制文件: 文件执行时, 拥有此文件所属组的权限
    * 其他可执行文件: 无效
    * 目录: 新增的文件所属的组是此目录所属的组
* SBIT(有可执行权限, 显示 t, 否则, 显示 T)
    * 文件: 无效
    * 目录: 此目录下的文件只有文件所有者, 目录所有者可以删除

## 权限判断过程
* 如果进程有效用户是 root
    * 直接成功
* 否则, 如果进程有效用户是文件的所有者
    * 如果有权限, 则成功
    * 否则, 不再判断其他权限, 直接失败
* 否则, 如果进程有效组用户是文件的所属组
    * 如果有权限, 则成功
    * 否则, 不再判断其他权限, 直接失败
* 否则, 判断其他权限
    * 如果, 有权限, 则成功
    * 否则, 失败

## 各种权限组合
* 在目录下新增或删除文件时, 至少拥有此目录的写和执行权限

## 查看文件权限
ls -l

## 修改文件权限
chmod u=rwx 1.c # 所属用户(u), 赋值权限
chmod g+x   1.c # 所属组(g), 添加权限
chmod o-r   1.c # 其他(o), 删除权限
chmod a+x   1.c # 上述所有(a)
chmod  +x   1.c # 同上, 但 umask 排除的权限没影响
chmod u+s   1.c # 设置 SUID 权限
chmod g+s   1.c # 设置 SGID 权限
chmod o+t   1.c # 设置 SBIT 权限
chmod  755  1.c # 使用数字设置权限
chmod 4755  1.c # 不足四位时, 补前缀 0
chmod 2755  1.c # 第一位表示 SUID(4) SGID(2) SBIT(1)
chmod 1755  1.c # 第二位表示 所属主的读(4)写(2)执行(1)权限
chmod 1755  1.c # 第三位表示 所属组的读(4)写(2)执行(1)权限
chmod 1755  1.c # 第四位表示   其他的读(4)写(2)执行(1)权限

chown lyb:lyb 1.c # 修改文件所属的组和用户

chattr +i file # 设置文件不可修改
chattr -i file # 取消文件不可修改

