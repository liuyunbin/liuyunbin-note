
## 换行符
Linux/iOS => \n
windows   => \r\n

## 换行符转换
dos2unix 1.txt
unix2doc 1.txt

## 查看换行符
file 1.txt

## 移除文件末尾的换行符
#### 方法一 == 建议
vim -c 'set binary noeol' -c 'wq!' 1.txt

#### 方法二 == 不建议, 只适用于只有一行且换行符为 \n 的情况
echo -n $(cat 1.txt | tr -d '\n') > 1.txt

## 添加文件末尾的换行符
vim -c 'set eol' -c 'wq!' 1.txt

## 文件时间
atime # 内容读取时间, 更新可能不及时
mtime # 内容修改时间
ctime # 状态修改时间: 内容 名称 权限 所属者 所属组

## 查看文件时间
stat -c %w # 列出 birth 人类可读形式
stat -c %W # 列出 birth 距离 Epoch 的秒数
stat -c %x # 列出 atime 人类可读形式
stat -c %X # 列出 atime 距离 Epoch 的秒数
stat -c %y # 列出 mtime 人类可读形式
stat -c %Y # 列出 mtime 距离 Epoch 的秒数
stat -c %z # 列出 ctime 人类可读形式
stat -c %Z # 列出 ctime 距离 Epoch 的秒数

## 修改文件时间
touch        1.c # 修改 atime mtime ctime
touch -a     1.c # 修改 atime
touch -m     1.c # 修改       mtime ctime
touch -r 2.c 1.c # 以 2.c 的时间修改 1.c
touch -d ... 1.c # 指定时间, 格式同 date
touch -t ... 1.c # 指定时间
                 # 依次是: 时区-年-月-日-时-分-秒

## 文件权限
* 读, 写, 执行
* SUID:
    文件执行时, 拥有此文件所有者的权限
    只对二进制有效
* SGID:
    二进制文件: 文件执行时, 拥有此文件所属组的权限
          目录: 新增的文件所属的组是此目录所属的组
* SBIT: 此目录下的文件只有文件或目录所有者才可以删除
* 权限判断: 依次判断所属用户, 所属组和其他权限
                前者失败时, 不判断后者
            假如 1.cc 的权限为 0070,
                所属主无权限, 所属组有权限时,
                对所属主也将判断为无权限
* 在目录下新增或删除文件时, 至少拥有此目录的写和执行权限

## 相关命令
chattr +i 1.c # 设置文件不可修改
chattr -i 1.c # 取消文件不可修改

chmod  755    1.c # 设置权限, 不足四位时, 补前缀 0
chmod  644 -R 1.c # 递归
chmod 4755    1.c # 设置 SUID(4)
chmod 2755    1.c # 设置 SGID(2)
chmod 1755    1.c # 设置 SBIT(1)

chown lyb:lyb 1.c # 修改文件所属的组和用户

cat         # 输出 标准输入 的内容
cat       - # 输出 标准输入 的内容
cat 1.txt   # 输出 1.txt 的内容, 文件支持多个
cat 1.txt - # 输出 1.txt 和 标准输入 的内容

cat 1.txt.link # 如果文件名是符号链接, 将使用符号链接所指向的文件

cat -b 1.txt # 显示行号, 行号不包括空行, 将覆盖参数 -n
cat -E 1.txt # 使用 $ 标明行结束的位置
cat -n 1.txt # 显示行号
cat -s 1.txt # 去掉多余的连续的空行
cat -T 1.txt # 显示 TAB

