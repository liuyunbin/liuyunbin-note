
## 字符存储(内存和文件)
编码: 字符 -> 计算机存储
解码: 计算机存储 -> 字符
字符集: ASCII (和编码规则一一对应)
        GB2312 => GBK(cp936) => GB18030 (和编码规则一一对应)
        BIG5
        Unicode
        Latin1(ISO-8859-1) 单字节使用完整的八位字节, 所以可以将其他编码当作 Latin1 来传输不会丢失数据
编码规则: UTF-8  -- 不需要 BOM, 存在也成(FE FF => EF BB BF)(建议不要)(使用 vim 的 set nobomb 可以去掉 BOM)
          UTF-16 --   需要 BOM(FE FF 或 FF FE)(需要考虑字节序)
          UTF-32 --   需要 BOM(00 00 FE FF 或 FF FE 00 00)(需要考虑字节序)

          windows 的 记事本 的 ASCI   : 本地编码
          windows 的 记事本 的 unicode: 带 BOM 的小端的 UTF-16
          windows 的 记事本 的 utf-8  : 带 BOM 的 UTF-8

文件编码转换: iconv -f gbk -t utf-8 1.txt -o 1.txt

文件编码不一定能准确获取

## 在 C++ 中使用(建议只使用 UTF-8)
UTF-8 : char, string   ,  ".....", u8"....."
UTF-16: char, u16string, u"....."
UTF-32: char, u32string, U"....."
字符串常量以 \u 开头的四个十六进制数表示 Unicode
字符串常量以 \U 开头的八个十六进制数表示 Unicode

