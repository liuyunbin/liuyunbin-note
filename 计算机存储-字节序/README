
## 字节序(单元大小是多字节的数据, 高字节在前还是在后)
* 网络字节序(大端)
* 内存中存储(大小端由 CPU 决定, 一般使用小端存储)(主机字节序)
* 文件内存储二进制(同内存中存储)(二进制文件)
* 文件中存储字符(由 BOM 决定)(文本文件)

## 大小端
### 大端存储(高字节存储在内存的低字节)
* 方便判断正负
* 看起来直观, 手写的计算机存储和真实的存储一致

### 小端存储(高字节存储在内存的高字节)
* 方便类型转换, 比如 int => short

### 涉及的 C++ 类型
*   整形: short, int, long, long long
* 浮点型: float, double, long double
* 字符类: wchar_t, char16_t, char32_t

### 判断
使用共同体或类似的方法

测试: test.cc

## BOM
* UTF-8 : 不需要 BOM (使用 vim 的 set nobomb 可以去掉 BOM)
* UTF-16: 由 BOM 指定
* UTF-32: 由 BOM 指定
*    GBK: 不需要 BOM

